<div id="codee">
    <textarea id="code-screen">{{content}}</textarea>
    <div id="video-container">
        <video autoplay id="second-video"></video>
        <video autoplay id="my-video" muted="true"></video>
        <div id="step2">
            <a class="button button-primary button-shadow" id="copyId">Copy your id</a>
            <input type="text" id="my-id" style="width: 100px;" />
            {{!-- <p class="alert alert-light" role="alert">Your ID: <span id="my-id">...</span></p> --}}
            <div class="form-inline">
                <input type="text" class="form-control" placeholder="Call User ID..." id="callto-id">
                <a href="#" class="btn" id="make-call"><i class="fas fa-phone fa-2x"></i></a>
            </div>
        </div>
        <div id="step3">
            <p>Talking to <br/><span id="second-id">...</span>
                <a href="#" class="button button-primary button-shadow" id="end-call">End call</a>
            </p>
        </div>
    </div>
    <div class="panel-group" id="chatbox">
        <div class="panel panel-default">
            
            <div id="collapse1" class="panel-collapse collapse">
                
                <div class="panel panel-primary" id="msgs">
                    <div class="panel-heading">
                        <span id="chatbox-username">{{#if user}}{{user.name}}{{/if}}</span>
                    </div>
                    <div class="panel-body">
                        <ul class="media-list" id="chat-listMessages">
                            <br/>
                        </ul>
                    </div>
                    <div class="panel-footer">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Ecrire votre message ici" id="userMessage">
                            <span class="input-group-btn">
                                <button type="buttom" class="btn" onclick="sendMessage()"><i class="far fa-paper-plane"></i></button>
                            </span>
                        </div>
                    </div>
                </div>

            </div>

            <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#collapse1" class="btn"><i class="fas fa-comments fa-2x"></i></a>
                    </h4>
            </div>
        </div>
    </div>
</div>
<input type="hidden" value="{{roomId}}" id="roomId">

<script
  src="https://code.jquery.com/jquery-3.4.1.min.js"
  integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
  crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.47.0/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.47.0/mode/javascript/javascript.min.js"></script>
<script src="/plugins/ot/ot.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js"></script>

<script>
    var EditorClient = ot.EditorClient;
    var SocketIOAdapter = ot.SocketIOAdapter;
    var CodeMirrorAdapter = ot.CodeMirrorAdapter;

    var socket = io.connect('https://mysterious-waters-89970.herokuapp.com');
    var editor = CodeMirror.fromTextArea(document.getElementById('code-screen'),{
        lineNumbers: true,
        theme: 'monokai'
    });

    var code = $('#code-screen').val();

    var cmClient;
    function init(str, revision, clients, serverAdapter) {
        if(!code){
            editor.setValue(str);
        }
        cmClient = window.cmClient = new EditorClient(
            revision, clients, serverAdapter, new CodeMirrorAdapter(editor)
        );
    };

    socket.on('doc',function(obj){
        init(obj.str, obj.revision, obj.clients, new SocketIOAdapter(socket));
    });

    var username = document.getElementById('chatbox-username').textContent;
    if(username === ''){
        var userId = Math.floor(Math.random() * 9999).toString();
        username = "Utilisateur" + userId;
        $('#chatbox-username').text(username);
    };

    var roomId = $('#roomId').val();
    socket.emit('joinRoom', {room: roomId, username: username});



    /*function getRandomColor() {
    var letters = '0123456789ABCDEF';
    var color = '#';
    for (var i = 0; i < 6; i++) {
        color += letters[Math.floor(Math.random() * 16)];
    }
        return color;
    }*/

    var userMessage = function(name,text,color){
        return('<li class="media"><div class="media-body"><div class="media">' +
        '<div class="media-body">' + 
        '<span style="color:'+color+'; font-weight:bold;">' + name + '</span> : ' + text +
        '<hr/></div></div></div></li>'
        );
    };


    var sendMessage = function(){
        var userMessage = $('#userMessage').val();
        socket.emit('chatMessage', {message: userMessage, username: username});
        $('#userMessage').val("");
    };

    socket.on('chatMessage', function(data){
        $('#chat-listMessages').append(userMessage(data.username,data.message,'blue'));
    });

    document.getElementById('copyId').addEventListener('click',()=>{
        document.getElementById('my-id').select();
        document.execCommand('Copy');
    })
    
    // PeerJS
  // Compatibility shim
    navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
    // PeerJS object
    var peer = new Peer();

    peer.on('open', function(){
      document.getElementById('my-id').value = peer.id;
    });

    // Receiving a call
    peer.on('call', function(call){
      // Answer the call automatically (instead of prompting user) for demo purposes
      var c = window.confirm("Click OK to answer");
      if(c == true)
      {
        call.answer(window.localStream);
        step3(call);
      }else{
          window.existingCall.close();
        step2();
      }
      
    });

    peer.on('error', function(err){
      alert(err.message);
      // Return to step 2 if error occurs
      step2();
    });

    // Click handlers setup
    $(function(){
      $('#make-call').click(function(){
        // Initiate a call!
        var call = peer.call($('#callto-id').val(), window.localStream);
        step3(call);
      });
      $('#end-call').click(function(){
        window.existingCall.close();
        step2();
      });
      step1();
    });
    function step1 () {
      // Get audio/video stream
      navigator.getUserMedia({audio: true, video: true}, function(stream){
        // Set your video displays
        document.getElementById('my-video').srcObject = stream;
        window.localStream = stream;
        step2();
      }, function(){ $('#step1-error').show(); });
    }

    function step2 () {
      $('#step1, #step3').hide();
      $('#step2').show();
    }

    function step3 (call) {
      // Hang up on an existing call if present
      if (window.existingCall) {
        window.existingCall.close();
      }
      // Wait for stream on the call, then set peer video display
      call.on('stream', function(stream){
        document.getElementById('second-video').srcObject = stream;
      });
      // UI stuff
      window.existingCall = call;
      $('#second-id').text(call.peer);
      call.on('close', step2);
      $('#step1, #step2').hide();
      $('#step3').show();
    }
</script>